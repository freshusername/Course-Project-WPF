//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DemoMain.EF
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    
    public partial class Cars
    {
        public int Id { get; set; }
        public string Name { get; set; }
        public string Model { get; set; }
        public string Transmission { get; set; }
        public string GazType { get; set; }
        public double EngineLitres { get; set; }
        public string TypeOfCar { get; set; }
        public int CarManufacturerId { get; set; }
        public int Discount { get; set; }
        public string Photos { get; set; }
        public double Price { get; set; }
    
        public virtual CarManufacturer CarManufacturer { get; set; }
        public override string ToString()
        {
            return $"New car: \n Car name: {Name} \n Car Model: {Model} \n CarTransmission: {Transmission} \n Car GazType: {GazType} \n Car Engine Litres: {EngineLitres} \n Car TypeOfCar: {TypeOfCar} \n Car's Manufacturer Id: {CarManufacturerId} \n Car's Discount: {Discount} \n Car's Photos: {Photos} \n Car's Price: {Price}";
        }


        public static List<Cars>getCars()
        {
            CarsDBEntities1 context = new CarsDBEntities1();
            var res = new List<Cars>();

            var test = context.Cars
                .Where(e => e.Id != 0)
                .Select(e => new
                {
                    name = e.Name,
                    model = e.Model,
                    transmission = e.Transmission,
                    gaztype = e.GazType,
                    enginelitres = e.EngineLitres,
                    typeofcar = e.TypeOfCar,
                    discount = e.Discount,
                    photos = e.Photos,
                    price = e.Price
                });


            foreach (var item in test)
            {
                res.Add(new Cars { Name = item.name, Model = item.model, Transmission = item.transmission, GazType = item.gaztype, EngineLitres = item.enginelitres, TypeOfCar = item.typeofcar, Discount = item.discount, Photos = item.photos, Price = item.price});
            }
            return res;
        }


    }
}
